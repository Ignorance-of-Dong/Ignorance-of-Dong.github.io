{"version":3,"sources":["store/index.jsx","router/index.js","router/routerView.jsx","App.js","reportWebVitals.js","index.js"],"names":["initialState","nickName","reducer","state","action","type","console","log","Error","Context","createContext","useStore","useContext","StoreProvider","children","useReducer","dispatch","Provider","value","routerConfig","config","path","component","React","lazy","exact","meta","isGloblePlayer","RouterView","props","routers","routerList","defaultRouter","to","fallback","map","item","index","Comp","route","concat","RouterViewPro","memo","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAEMA,EAAe,CACnBC,SAAU,IAGZ,SAASC,EAAQC,EAAOC,GACtB,GACO,mBADCA,EAAOC,KAGX,OADAC,QAAQC,IAAIH,GACL,CAACH,SAAUG,EAAOH,UAEzB,MAAM,IAAIO,MAIhB,IAAMC,EAAUC,0BAEhB,SAASC,IACP,OAAOC,qBAAWH,GAGpB,SAASI,EAAT,GAAsC,IAAbC,EAAY,EAAZA,SACvB,EAA0BC,qBAAWb,EAASF,GAA9C,mBAAOG,EAAP,KAAca,EAAd,KAEA,OACE,cAACP,EAAQQ,SAAT,CAAkBC,MAAO,CAACf,EAAOa,GAAjC,SACGF,M,iGC2CQK,G,MArEI,CACjBC,OAAQ,CACN,CACEC,KAAM,QACNC,UAAWC,IAAMC,MAAK,kBAAM,gCAC5BC,OAAO,EACPC,KAAM,CACJC,gBAAgB,IAGpB,CACEN,KAAM,SACNC,UAAWC,IAAMC,MAAK,kBAAM,uDAC5BC,OAAO,EACPC,KAAM,CACJC,gBAAgB,IAGpB,CACEN,KAAM,YACNC,UAAWC,IAAMC,MAAK,kBAAM,uDAC5BC,OAAO,EACPC,KAAM,CACJC,gBAAgB,IAGpB,CACEN,KAAM,eACNC,UAAWC,IAAMC,MAAK,kBAAM,sDAC5BC,OAAO,EACPC,KAAM,CACJC,gBAAgB,IAGpB,CACEN,KAAM,cACNC,UAAWC,IAAMC,MAAK,kBAAM,gCAC5BC,OAAO,EACPC,KAAM,CACJC,gBAAgB,IAGpB,CACEN,KAAM,gBACNC,UAAWC,IAAMC,MAAK,kBAAM,gCAC5BC,OAAO,EACPC,KAAM,CACJC,gBAAgB,IAGpB,CACEN,KAAM,UACNC,UAAWC,IAAMC,MAAK,kBAAM,gCAC5BC,OAAO,EACPC,KAAM,CACJC,gBAAgB,IAIpB,CACEN,KAAM,SACNC,UAAWC,IAAMC,MAAK,kBAAM,gCAC5BC,OAAO,EACPC,KAAM,CACJC,gBAAgB,O,8BCrCTC,MA1Bf,SAAoBC,GAChB,IAAIC,EAAUD,EAAMC,QAAUD,EAAMC,QAAUD,EAAME,WAC9CC,EAAgB,cAAC,IAAD,CAAOX,KAAK,IAAIC,UAAW,WAC7C,OAAO,cAAC,IAAD,CAAUW,GAAG,UAAc,KAC1BR,OAAK,GAAT,IACR,OACI,cAAC,IAAD,UACI,cAAC,WAAD,CAAUS,SAAU,wBAApB,SACI,cAAC,IAAD,UAEQJ,EAAQK,KAAI,SAACC,EAAMC,GACf,IAAMC,EAAOF,EAAKd,UAClB,OAAO,cAAC,IAAD,CAAOD,KAAMe,EAAKf,KAAMI,MAAOW,EAAKX,MAAOH,UAAW,SAACQ,GAC1D,OAAO,cAACQ,EAAD,aAAMC,MAAOH,EAAKtB,UAAcgB,MACnCO,MACTG,OAAOR,U,QCZ5BS,EAAgBC,eAAKd,GAWZe,MAVf,WACE,OACE,cAAC,IAAD,UACE,qBAAKC,UAAU,OAAf,SACE,cAACH,EAAD,CAAeV,WAAYZ,EAAaC,cCEjCyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b4e172be.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext } from 'react';\n\nconst initialState = {\n  nickName: \"\"\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'updateNickName':\n      console.log(action)\n      return {nickName: action.nickName};\n    default:\n      throw new Error();\n  }\n}\n\nconst Context = createContext();\n\nfunction useStore() {\n  return useContext(Context);\n}\n\nfunction StoreProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <Context.Provider value={[state, dispatch]}>\n      {children}\n    </Context.Provider>\n  );\n}\n\nexport { useStore, StoreProvider };","import React from \"react\";\nlet routerConfig = {\n  config: [\n    {\n      path: \"/home\",\n      component: React.lazy(() => import(\"../views/Home\")),\n      exact: true,\n      meta: {\n        isGloblePlayer: false\n      }\n    },\n    {\n      path: \"/login\",\n      component: React.lazy(() => import(\"../views/Login\")),\n      exact: true,\n      meta: {\n        isGloblePlayer: false\n      }\n    },\n    {\n      path: \"/register\",\n      component: React.lazy(() => import(\"../views/Register\")),\n      exact: true,\n      meta: {\n        isGloblePlayer: false\n      }\n    },\n    {\n      path: \"/perfectInfo\",\n      component: React.lazy(() => import(\"../views/PerfectInfo\")),\n      exact: true,\n      meta: {\n        isGloblePlayer: false\n      }\n    },\n    {\n      path: \"/citySights\",\n      component: React.lazy(() => import(\"../views/CitySights\")),\n      exact: true,\n      meta: {\n        isGloblePlayer: false\n      }\n    },\n    {\n      path: \"/sightsDetail\",\n      component: React.lazy(() => import(\"../views/SightsDetail\")),\n      exact: true,\n      meta: {\n        isGloblePlayer: false\n      }\n    },\n    {\n      path: \"/survey\",\n      component: React.lazy(() => import(\"../views/Survey\")),\n      exact: true,\n      meta: {\n        isGloblePlayer: false\n      }\n    },\n\n    {\n      path: \"/about\",\n      component: React.lazy(() => import(\"../views/About\")),\n      exact: false,\n      meta: {\n        isGloblePlayer: true\n      }\n    }\n  ]\n};\nexport default routerConfig;\n","import React, { Suspense } from 'react';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom'\nfunction RouterView(props) {\n    let routers = props.routers ? props.routers : props.routerList\n    const defaultRouter = <Route path=\"/\" component={() => {\n        return <Redirect to=\"/login\" key={22}/>\n    }} key={22} exact/>\n    return (\n        <HashRouter>\n            <Suspense fallback={<div></div>}>\n                <Switch>\n                    {\n                        routers.map((item, index) => {\n                            const Comp = item.component\n                            return <Route path={item.path} exact={item.exact} component={(routers) => {\n                                return <Comp route={item.children} {...routers}></Comp>\n                            }} key={index}/>\n                        }).concat(defaultRouter)\n                    }\n\n                </Switch>\n            </Suspense>\n        </HashRouter>\n    )\n}\n\n\n\nexport default RouterView","import routerConfig from \"./router\";\nimport React, { memo } from \"react\";\nimport RouterView from \"./router/routerView\";\nimport { StoreProvider } from \"../src/store/index.jsx\";\n\nconst RouterViewPro = memo(RouterView);\nfunction App() {\n  return (\n    <StoreProvider>\n      <div className=\"main\">\n        <RouterViewPro routerList={routerConfig.config} />\n      </div>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}