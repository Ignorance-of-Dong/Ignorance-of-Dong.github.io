{"version":3,"sources":["views/Register/index.jsx"],"names":["Register","props","useState","userName","setUserName","password","setPassword","repectPassword","setrepectPassword","isFirstName","setisFirstName","isFirstpws","setisFirstpws","isFirstRepectpws","setisFirstRepectpws","handleRegister","a","fetchRegister","username","history","push","Toasts","error","className","type","placeholder","value","onChange","e","target","onClick"],"mappings":"qNA0FeA,UApFf,SAAkBC,GACd,MAA8BC,mBAAS,IAAvC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAA8BF,mBAAS,IAAvC,mBAAKG,EAAL,KAAeC,EAAf,KACA,EAA0CJ,mBAAS,IAAnD,mBAAKK,EAAL,KAAqBC,EAArB,KAGA,EAAoCN,mBAAS,GAA7C,mBAAKO,EAAL,KAAkBC,EAAlB,KACA,EAAkCR,mBAAS,GAA3C,mBAAKS,EAAL,KAAiBC,EAAjB,KACA,EAA8CV,mBAAS,GAAvD,mBAAKW,EAAL,KAAuBC,EAAvB,KAGMC,EAAc,uCAAG,sBAAAC,EAAA,yDACnBN,EAAe,GACfE,EAAc,GACdE,EAAoB,GACH,KAAbX,GAAgC,KAAbE,GAAsC,KAAnBE,EAJvB,0EAMTU,YAAc,CAChBC,SAAUf,IAPC,OASfF,EAAMkB,QAAQC,KAAd,gCAA4CjB,IAT7B,kDAWfkB,YAAO,KAAMC,MAAO,KAXL,0DAAH,qDAepB,OAAO,qBAAKC,UAAU,qBAAf,SACH,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,4CAEJ,sBAAKA,UAAU,gBAAf,UACI,sBACIA,WAAYd,GAAeN,EAAW,iBAAmB,0BAD7D,UAGI,qBAAKoB,UAAU,aAAf,4BACA,uBAAOC,KAAK,OAAOC,YAAY,4BAA4BC,MAAOvB,EAAUwB,SAAU,SAACC,GACnFxB,EAAYwB,EAAEC,OAAOH,OACrBhB,EAAeD,EAAc,OAG5BA,GAAeN,EAAW,KAAO,qBAAKoB,UAAU,kBAAf,0CAK1C,sBAEIA,WAAYZ,GAAcN,EAAW,iBAAmB,0BAF5D,UAII,qBAAKkB,UAAU,aAAf,4BACA,uBAAOC,KAAK,WAAWC,YAAY,4BAA4BC,MAAOrB,EAAUsB,SAAU,SAACC,GACvFtB,EAAYsB,EAAEC,OAAOH,OACrBd,EAAcD,EAAa,OAG1BA,GAAcN,EAAW,KAAO,qBAAKkB,UAAU,kBAAf,yCAKzC,sBACIA,WAAYV,GAAoBN,EAAiB,iBAAmB,0BADxE,UAGI,qBAAKgB,UAAU,aAAf,iCACA,uBAAOC,KAAK,WAAWC,YAAY,gBAAgBC,MAAOnB,EAAgBoB,SAAU,SAACC,GACjFpB,EAAkBoB,EAAEC,OAAOH,OAC3BZ,EAAoBD,EAAmB,OAGtCA,GAAoBN,EAAiB,KAAO,qBAAKgB,UAAU,kBAAf,4CAMzD,qBAAKA,UAAU,kBAAkBO,QAAS,WACtCf,KADJ","file":"static/js/11.3d9ac89b.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./index.scss\"\nimport { useState } from \"react\"\nimport { fetchRegister } from \"../../services/fake-services\"\nimport Toasts from \"../../component/Loading\";\n\nfunction Register(props) {\n    let [userName, setUserName] = useState(\"\");\n    let [password, setPassword] = useState(\"\");\n    let [repectPassword, setrepectPassword] = useState(\"\");\n\n\n    let [isFirstName, setisFirstName] = useState(0);\n    let [isFirstpws, setisFirstpws] = useState(0);\n    let [isFirstRepectpws, setisFirstRepectpws] = useState(0);\n\n\n    const handleRegister = async () => {\n        setisFirstName(1)\n        setisFirstpws(1)\n        setisFirstRepectpws(1)\n        if (userName === \"\" || password === \"\" || repectPassword === \"\") return;\n        try {\n            await fetchRegister({\n                username: userName\n            })\n            props.history.push(`/perfectInfo?userName=${userName}`)\n        } catch (error) {\n            Toasts(error.error, 1000);\n        }\n    }\n\n    return <div className=\"register-container\">\n        <div className=\"register-content\">\n            <div className=\"register-title\">\n                <h3>Register</h3>\n            </div>\n            <div className=\"register-form\">\n                <div\n                    className={!isFirstName || userName ? \"register-input\" : \"register-input is-error\"}\n                >\n                    <div className=\"form-label\">Username：</div>\n                    <input type=\"text\" placeholder=\"Please enter the Username\" value={userName} onChange={(e) => {\n                        setUserName(e.target.value)\n                        setisFirstName(isFirstName + 1)\n                    }} />\n                    {\n                        !isFirstName || userName ? null : <div className=\"form-error-text\">\n                            Please enter the Username\n                        </div>\n                    }\n                </div>\n                <div\n\n                    className={!isFirstpws || password ? \"register-input\" : \"register-input is-error\"}\n                >\n                    <div className=\"form-label\">Password：</div>\n                    <input type=\"password\" placeholder=\"Please enter the Password\" value={password} onChange={(e) => {\n                        setPassword(e.target.value)\n                        setisFirstpws(isFirstpws + 1)\n                    }} />\n                    {\n                        !isFirstpws || password ? null : <div className=\"form-error-text\">\n                            Password cannot be empty\n                        </div>\n                    }\n                </div>\n                <div\n                    className={!isFirstRepectpws || repectPassword ? \"register-input\" : \"register-input is-error\"}\n                >\n                    <div className=\"form-label\">Confirm again：</div>\n                    <input type=\"password\" placeholder=\"Confirm again\" value={repectPassword} onChange={(e) => {\n                        setrepectPassword(e.target.value)\n                        setisFirstRepectpws(isFirstRepectpws + 1)\n                    }} />\n                    {\n                        !isFirstRepectpws || repectPassword ? null : <div className=\"form-error-text\">\n                            Password cannot be empty\n                        </div>\n                    }\n                </div>\n            </div>\n            <div className=\"register-button\" onClick={() => {\n                handleRegister()\n            }}>\n                Register and log in\n            </div>\n        </div>\n    </div>\n}\nexport default Register"],"sourceRoot":""}