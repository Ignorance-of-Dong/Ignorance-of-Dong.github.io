{"version":3,"sources":["uitls/useQuery.js","views/PerfectInfo/index.jsx"],"names":["query","url","window","location","href","indexOf","params","split","obj","i","length","param","decodeURIComponent","PerfectInfo","props","useState","nickName","setNickName","age","setAge","decs","setDesc","useStore","dispatch","handleSubmit","a","userName","username","profile","fetchUpdateUser","res","type","history","push","Toasts","error","className","placeholder","value","onChange","e","target","onClick"],"mappings":"6GAceA,IAbf,WACI,IAAIC,EAAMC,OAAOC,SAASC,KAC1B,IAA0B,IAAtBH,EAAII,QAAQ,KAAa,OAAO,KAIpC,IAHA,IACIC,EADOL,EAAIM,MAAM,KACH,GAAGA,MAAM,KACvBC,EAAM,GACDC,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,IAAK,CACpC,IAAIE,EAAQL,EAAOG,GAAGF,MAAM,KAC5BC,EAAIG,EAAM,IAAMC,mBAAmBD,EAAM,IAE7C,OAAOH,I,uJCuDIK,UA5Df,SAAqBC,GAEjB,MAA8BC,mBAAS,WAAvC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAAoBF,mBAAS,IAA7B,mBAAKG,EAAL,KAAUC,EAAV,KACA,EAAsBJ,mBAAS,IAA/B,mBAAKK,EAAL,KAAWC,EAAX,KAEA,EAAgCC,cAAZC,EAApB,oBAEMC,EAAY,uCAAG,kCAAAC,EAAA,+DACEzB,cAAb0B,EADW,EACXA,SADW,SAGTpB,EAAS,CACTqB,SAAUD,EACVE,QAAS,CACLZ,SAAUA,EACVE,IAAKA,EACLE,KAAMA,IARD,SAWGS,YAAgBvB,GAXnB,OAWTwB,EAXS,OAYbP,EAAS,CAAEQ,KAAM,iBAAkBf,SAAUc,EAAIF,QAAQZ,WACzDF,EAAMkB,QAAQC,KAAK,SAbN,kDAebC,YAAO,KAAMC,MAAO,KAfP,0DAAH,qDAkBlB,OAAO,qBAAKC,UAAU,oBAAf,SACH,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,yDAEJ,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,aAAf,4BACA,uBAAOL,KAAK,OAAOM,YAAY,4BAA4BC,MAAOtB,EAAUuB,SAAU,SAACC,GACnFvB,EAAYuB,EAAEC,OAAOH,aAI7B,sBAAKF,UAAU,gBAAf,UACI,qBAAKA,UAAU,aAAf,uBACA,uBAAOL,KAAK,OAAOM,YAAY,uBAAuBC,MAAOpB,EAAKqB,SAAU,SAACC,GACzErB,EAAOqB,EAAEC,OAAOH,aAGxB,sBAAKF,UAAU,gBAAf,UACI,qBAAKA,UAAU,aAAf,+BACA,uBAAOL,KAAK,OAAOM,YAAY,+BAA+BC,MAAOlB,EAAMmB,SAAU,SAACC,GAClFnB,EAAQmB,EAAEC,OAAOH,gBAK7B,sBAAKF,UAAU,iBAAf,UACI,qBAAKM,QAAS,WAAQlB,KAAtB,kBACA,qBAAKkB,QAAS,WAAQlB,KAAtB","file":"static/js/9.7ef51f1c.chunk.js","sourcesContent":["\nfunction query() {\n    let url = window.location.href\n    if (url.indexOf('?') === -1) return null\n    var arr1 = url.split(\"?\");\n    var params = arr1[1].split(\"&\");\n    var obj = {};\n    for (var i = 0; i < params.length; i++) {\n        var param = params[i].split(\"=\");\n        obj[param[0]] = decodeURIComponent(param[1]);\n    }\n    return obj;\n}\n\nexport default query","import \"./index.scss\"\nimport { fetchUpdateUser } from \"../../services/fake-services\"\nimport { useState } from \"react\"\nimport Toasts from \"../../component/Loading\";\nimport query from '../../uitls/useQuery'\nimport { useStore } from \"../../store\"\nfunction PerfectInfo(props) {\n\n    let [nickName, setNickName] = useState(\"Visitor\");\n    let [age, setAge] = useState(\"\");\n    let [decs, setDesc] = useState(\"\");\n\n    const [/* state */, dispatch] = useStore();\n\n    const handleSubmit = async () => {\n        let { userName } = query()\n        try {\n            let params = {\n                username: userName,\n                profile: {\n                    nickName: nickName,\n                    age: age,\n                    decs: decs\n                }\n            }\n            let res = await fetchUpdateUser(params)\n            dispatch({ type: 'updateNickName', nickName: res.profile.nickName })\n            props.history.push(\"/home\")\n        } catch (error) {\n            Toasts(error.error, 1000);\n        }\n    }\n    return <div className=\"perfect-container\">\n        <div className=\"perfect-content\">\n            <div className=\"perfect-title\">\n                <h3>Complete your profile</h3>\n            </div>\n            <div className=\"perfect-form\">\n                <div className=\"perfect-input\">\n                    <div className=\"form-label\">Nickname：</div>\n                    <input type=\"text\" placeholder=\"Please enter the Nickname\" value={nickName} onChange={(e) => {\n                        setNickName(e.target.value)\n                    }} />\n\n                </div>\n                <div className=\"perfect-input\">\n                    <div className=\"form-label\">Age：</div>\n                    <input type=\"text\" placeholder=\"Please enter the Age\" value={age} onChange={(e) => {\n                        setAge(e.target.value)\n                    }} />\n                </div>\n                <div className=\"perfect-input\">\n                    <div className=\"form-label\">Description：</div>\n                    <input type=\"text\" placeholder=\"Please enter the Description\" value={decs} onChange={(e) => {\n                        setDesc(e.target.value)\n                    }} />\n\n                </div>\n            </div>\n            <div className=\"perfect-button\">\n                <div onClick={() => { handleSubmit() }}>Skip</div>\n                <div onClick={() => { handleSubmit() }}>Submit</div>\n            </div>\n        </div>\n    </div>\n}\nexport default PerfectInfo"],"sourceRoot":""}